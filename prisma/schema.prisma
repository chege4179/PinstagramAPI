// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("LOCAL_DATABASE_URL")
}

model User {
  userId          String   @id @default(uuid())
  username        String   @unique
  fullName        String
  email           String   @unique
  bio             String?
  password        String
  createdAt       String
  createdOn       String
  profileImageUrl String
  posts           Post[]
  comments        Comment[]
  likes           Like[]
  views           View[]
  followers       Follower[] @relation("Followers")
  following       Follower[] @relation("Following")

}
model Post {
  postAuthorId    String
  postId         String          @id @default(uuid())
  postCaption    String

  createdAt      String
  createdOn      String
  postCreator    User            @relation(fields: [postAuthorId], references: [userId])

  postContent    PostMedia[]
  comments       Comment[]
  likes          Like[]
  views           View[]
}



model PostMedia {
  postMediaId   String  @id @default(uuid())
  postMediaType String
  postMediaURL  String

  postMediaPostId String

  post          Post  @relation(fields: [postMediaPostId], references: [postId] ,onDelete: Cascade,onUpdate: Cascade)

}


model Comment {
  commentId      String   @id @default(uuid())
  commentContent String
  commentCreatedAt String
  commentCreatedOn String

  commentAuthorId  String
  commentPostId  String


  post           Post  @relation(fields: [commentPostId], references: [postId],onDelete: Cascade,onUpdate: Cascade)
  commentAuthor User   @relation(fields: [commentAuthorId], references: [userId],onDelete: Cascade,onUpdate: Cascade)
}


model Like {
  likeId String @id @default(uuid())
  likeCreatedAt String
  likeCreatedOn String

  likePostId String
  likeUserId String

  post  Post   @relation(fields: [likePostId], references: [postId])
  likeCreator User @relation(fields: [likeUserId], references: [userId])


}

model View {
  viewId        String @id @default(uuid())
  viewCreatedAt String
  viewCreatedOn String

  viewPostId    String
  viewUserId    String

  post          Post   @relation(fields: [viewPostId], references: [postId])
  viewCreator   User @relation(fields: [viewUserId], references: [userId])



}

model Follower {
  followerId String @id @default(uuid())


  followerUserId String
  followedUserId String

  follower User @relation("Followers",fields: [followerUserId], references: [userId])
  followed User @relation("Following",fields: [followedUserId], references: [userId])
}
